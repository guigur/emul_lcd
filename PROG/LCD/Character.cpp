#include "Character.h"
#include <iostream>

Character::Character()
{
	init();
}

Character::Character(const char &lcd_char)
{
	_lcd_char = lcd_char;
	init();
}

void Character::init()
{
	_width = 5;
	_height = 8;
	setPixSize(3, 3);
	_colorBackground = sf::Color(125, 158, 51);
	_colorLetter = sf::Color(0, 49 , 0);

	//TODO: put charset in static or in hardware
	//2eme colonne
	charset[' '] = { { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 } };
	charset['!'] = { { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x00 }, { 0x00 }, { 0x04 }, { 0x00 } };
	charset['"'] = { { 0x0A }, { 0x0A }, { 0x0A }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 } };
	charset['#'] = { { 0x0A }, { 0x0A }, { 0x1F }, { 0x0A }, { 0x1F }, { 0x0A }, { 0x0A }, { 0x00 } };
	charset['$'] = { { 0x04 }, { 0x0F }, { 0x14 }, { 0x0E }, { 0x05 }, { 0x1E }, { 0x04 }, { 0x00 } };
	charset['%'] = { { 0x18 }, { 0x19 }, { 0x02 }, { 0x04 }, { 0x08 }, { 0x13 }, { 0x03 }, { 0x00 } };
	charset['&'] = { { 0x0C }, { 0x12 }, { 0x14 }, { 0x08 }, { 0x15 }, { 0x12 }, { 0x0D }, { 0x00 } };
	charset['\''] = { { 0x0C }, { 0x04 }, { 0x08 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 } };
	charset['('] = { { 0x02 }, { 0x04 }, { 0x08 }, { 0x08 }, { 0x08 }, { 0x04 }, { 0x02 }, { 0x00 } };
	charset[')'] = { { 0x08 }, { 0x04 }, { 0x02 }, { 0x02 }, { 0x02 }, { 0x04 }, { 0x08 }, { 0x00 } };
	charset['*'] = { { 0x00 }, { 0x04 }, { 0x15 }, { 0x0E }, { 0x15 }, { 0x04 }, { 0x00 }, { 0x00 } };
	charset['+'] = { { 0x00 }, { 0x04 }, { 0x04 }, { 0x1F }, { 0x04 }, { 0x04 }, { 0x00 }, { 0x00 } };
	charset[','] = { { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x0C }, { 0x04 }, { 0x08 }, { 0x00 } };
	charset['-'] = { { 0x00 }, { 0x00 }, { 0x00 }, { 0x1F }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 } };
	charset['.'] = { { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x0C }, { 0x0C }, { 0x00 } };
	charset['/'] = { { 0x00 }, { 0x01 }, { 0x02 }, { 0x04 }, { 0x08 }, { 0x10 }, { 0x00 }, { 0x00 } };

	//3eme colonne
	charset['0'] = { { 0x0E }, { 0x11 }, { 0x13 }, { 0x15 }, { 0x19 }, { 0x11 }, { 0x0E }, { 0x00 } };
	charset['1'] = { { 0x04 }, { 0x0C }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x0E }, { 0x00 } };
	charset['2'] = { { 0x0E }, { 0x11 }, { 0x01 }, { 0x02 }, { 0x04 }, { 0x08 }, { 0x1F }, { 0x00 } };
	charset['3'] = { { 0x1F }, { 0x02 }, { 0x04 }, { 0x02 }, { 0x01 }, { 0x11 }, { 0x0E }, { 0x00 } };
	charset['4'] = { { 0x02 }, { 0x06 }, { 0x0A }, { 0x12 }, { 0x1F }, { 0x02 }, { 0x02 }, { 0x00 } };
	charset['5'] = { { 0x1F }, { 0x10 }, { 0x1E }, { 0x01 }, { 0x01 }, { 0x11 }, { 0x0E }, { 0x00 } };
	charset['6'] = { { 0x06 }, { 0x08 }, { 0x10 }, { 0x1E }, { 0x11 }, { 0x11 }, { 0x0E }, { 0x00 } };
	charset['7'] = { { 0x1F }, { 0x11 }, { 0x01 }, { 0x02 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x00 } };
	charset['8'] = { { 0x0E }, { 0x11 }, { 0x11 }, { 0x0E }, { 0x11 }, { 0x11 }, { 0x0E }, { 0x00 } };
	charset['9'] = { { 0x0E }, { 0x11 }, { 0x11 }, { 0x0F }, { 0x01 }, { 0x02 }, { 0x0C }, { 0x00 } };
	charset[':'] = { { 0x00 }, { 0x0C }, { 0x0C }, { 0x00 }, { 0x0C }, { 0x0C }, { 0x00 }, { 0x00 } };
	charset[';'] = { { 0x00 }, { 0x0C }, { 0x0C }, { 0x00 }, { 0x0C }, { 0x04 }, { 0x08 }, { 0x00 } };
	charset['<'] = { { 0x02 }, { 0x04 }, { 0x08 }, { 0x10 }, { 0x08 }, { 0x04 }, { 0x02 }, { 0x00 } };
	charset['='] = { { 0x00 }, { 0x00 }, { 0x1F }, { 0x00 }, { 0x1F }, { 0x00 }, { 0x00 }, { 0x00 } };
	charset['>'] = { { 0x08 }, { 0x04 }, { 0x02 }, { 0x01 }, { 0x02 }, { 0x04 }, { 0x08 }, { 0x00 } };
	charset['?'] = { { 0x0E }, { 0x11 }, { 0x01 }, { 0x02 }, { 0x04 }, { 0x00 }, { 0x04 }, { 0x00 } };

	//4eme colonne
	charset['@'] = { { 0x0E }, { 0x11 }, { 0x01 }, { 0x0D }, { 0x15 }, { 0x15 }, { 0x0E }, { 0x00 } };
	charset['A'] = { { 0x0E }, { 0x11 }, { 0x11 }, { 0x1F }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x00 } };
	charset['B'] = { { 0x1E }, { 0x11 }, { 0x11 }, { 0x1E }, { 0x11 }, { 0x11 }, { 0x1E }, { 0x00 } };
	charset['C'] = { { 0x0E }, { 0x11 }, { 0x10 }, { 0x10 }, { 0x10 }, { 0x11 }, { 0x0E }, { 0x00 } };
	charset['D'] = { { 0x1C }, { 0x12 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x12 }, { 0x1C }, { 0x00 } };
	charset['E'] = { { 0x1F }, { 0x10 }, { 0x10 }, { 0x1E }, { 0x10 }, { 0x10 }, { 0x1F }, { 0x00 } };
	charset['F'] = { { 0x1F }, { 0x10 }, { 0x10 }, { 0x1E }, { 0x10 }, { 0x10 }, { 0x10 }, { 0x00 } };
	charset['G'] = { { 0x0E }, { 0x11 }, { 0x10 }, { 0x17 }, { 0x11 }, { 0x11 }, { 0x0F }, { 0x00 } };
	charset['H'] = { { 0x11 }, { 0x11 }, { 0x11 }, { 0x1F }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x00 } };
	charset['I'] = { { 0x0E }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x0E }, { 0x00 } };
	charset['J'] = { { 0x07 }, { 0x02 }, { 0x02 }, { 0x02 }, { 0x02 }, { 0x12 }, { 0x0C }, { 0x00 } };
	charset['K'] = { { 0x11 }, { 0x12 }, { 0x14 }, { 0x18 }, { 0x14 }, { 0x12 }, { 0x11 }, { 0x00 } };
	charset['L'] = { { 0x10 }, { 0x10 }, { 0x10 }, { 0x10 }, { 0x10 }, { 0x10 }, { 0x1F }, { 0x00 } };
	charset['M'] = { { 0x11 }, { 0x1B }, { 0x15 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x00 } };
	charset['N'] = { { 0x11 }, { 0x11 }, { 0x19 }, { 0x15 }, { 0x13 }, { 0x11 }, { 0x11 }, { 0x00 } };
	charset['O'] = { { 0x0E }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x0E }, { 0x00 } };

	//5eme colonne
	charset['P'] = { { 0x1E }, { 0x11 }, { 0x11 }, { 0x1E }, { 0x10 }, { 0x10 }, { 0x10 }, { 0x00 } };
	charset['Q'] = { { 0x0E }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x15 }, { 0x12 }, { 0x0D }, { 0x00 } };
	charset['R'] = { { 0x1E }, { 0x11 }, { 0x11 }, { 0x1E }, { 0x14 }, { 0x12 }, { 0x11 }, { 0x00 } };
	charset['S'] = { { 0x0F }, { 0x10 }, { 0x10 }, { 0x0E }, { 0x01 }, { 0x01 }, { 0x1E }, { 0x00 } };
	charset['T'] = { { 0x1F }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x00 } };
	charset['U'] = { { 0x11 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x0E }, { 0x00 } };
	charset['V'] = { { 0x11 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x0A }, { 0x04 }, { 0x00 } };
	charset['W'] = { { 0x11 }, { 0x11 }, { 0x11 }, { 0x15 }, { 0x15 }, { 0x15 }, { 0x0A }, { 0x00 } };
	charset['X'] = { { 0x11 }, { 0x11 }, { 0x0A }, { 0x04 }, { 0x0A }, { 0x11 }, { 0x11 }, { 0x00 } };
	charset['Y'] = { { 0x11 }, { 0x11 }, { 0x11 }, { 0x0A }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x00 } };
	charset['Z'] = { { 0x1F }, { 0x01 }, { 0x02 }, { 0x04 }, { 0x08 }, { 0x10 }, { 0x1F }, { 0x00 } };
	charset['['] = { { 0x1C }, { 0x10 }, { 0x10 }, { 0x10 }, { 0x10 }, { 0x10 }, { 0x1C }, { 0x00 } };
	charset['¥'] = { { 0x11 }, { 0x0A }, { 0x1F }, { 0x04 }, { 0x1F }, { 0x04 }, { 0x04 }, { 0x00 } };
	charset[']'] = { { 0x0E }, { 0x02 }, { 0x02 }, { 0x02 }, { 0x02 }, { 0x02 }, { 0x0E }, { 0x00 } };
	charset['^'] = { { 0x04 }, { 0x0A }, { 0x11 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 } };
	charset['_'] = { { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x1F }, { 0x00 } };

	//6eme colonne
	charset['`'] = { { 0x08 }, { 0x04 }, { 0x02 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 } };
	charset['a'] = { { 0x00 }, { 0x00 }, { 0x0E }, { 0x01 }, { 0x0F }, { 0x11 }, { 0x0F }, { 0x00 } };
	charset['b'] = { { 0x10 }, { 0x10 }, { 0x16 }, { 0x19 }, { 0x11 }, { 0x11 }, { 0x1E }, { 0x00 } };
	charset['c'] = { { 0x00 }, { 0x00 }, { 0x0E }, { 0x10 }, { 0x10 }, { 0x11 }, { 0x0E }, { 0x00 } };
	charset['d'] = { { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 }, { 0x00 } };
	charset['e'] = { { 0x01 }, { 0x01 }, { 0x0D }, { 0x13 }, { 0x11 }, { 0x11 }, { 0x0F }, { 0x00 } };
	charset['f'] = { { 0x06 }, { 0x09 }, { 0x08 }, { 0x1C }, { 0x08 }, { 0x08 }, { 0x08 }, { 0x00 } };
	charset['g'] = { { 0x00 }, { 0x0F }, { 0x11 }, { 0x11 }, { 0x0F }, { 0x01 }, { 0x0E }, { 0x00 } };
	charset['h'] = { { 0x10 }, { 0x10 }, { 0x16 }, { 0x19 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x00 } };
	charset['i'] = { { 0x04 }, { 0x00 }, { 0x0C }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x0E }, { 0x00 } };
	charset['j'] = { { 0x02 }, { 0x00 }, { 0x06 }, { 0x02 }, { 0x02 }, { 0x12 }, { 0x0C }, { 0x00 } };
	charset['k'] = { { 0x10 }, { 0x10 }, { 0x12 }, { 0x14 }, { 0x18 }, { 0x14 }, { 0x12 }, { 0x00 } };
	charset['l'] = { { 0x0C }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x0E }, { 0x00 } };
	charset['m'] = { { 0x00 }, { 0x00 }, { 0x1A }, { 0x15 }, { 0x15 }, { 0x11 }, { 0x11 }, { 0x00 } };
	charset['n'] = { { 0x00 }, { 0x00 }, { 0x16 }, { 0x19 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x00 } };
	charset['o'] = { { 0x00 }, { 0x00 }, { 0x0E }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x0E }, { 0x00 } };

	//7eme colonne
	charset['p'] = { { 0x00 }, { 0x00 }, { 0x1E }, { 0x11 }, { 0x1E }, { 0x10 }, { 0x10 }, { 0x00 } };
	charset['q'] = { { 0x00 }, { 0x00 }, { 0x0D }, { 0x13 }, { 0x0F }, { 0x01 }, { 0x01 }, { 0x00 } };
	charset['r'] = { { 0x00 }, { 0x00 }, { 0x16 }, { 0x19 }, { 0x10 }, { 0x10 }, { 0x10 }, { 0x00 } };
	charset['s'] = { { 0x00 }, { 0x00 }, { 0x0E }, { 0x10 }, { 0x0E }, { 0x01 }, { 0x1E }, { 0x00 } };
	charset['t'] = { { 0x08 }, { 0x08 }, { 0x1C }, { 0x08 }, { 0x08 }, { 0x09 }, { 0x06 }, { 0x00 } };
	charset['u'] = { { 0x00 }, { 0x00 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x13 }, { 0x0D }, { 0x00 } };
	charset['v'] = { { 0x00 }, { 0x00 }, { 0x11 }, { 0x11 }, { 0x11 }, { 0x0A }, { 0x04 }, { 0x00 } };
	charset['w'] = { { 0x00 }, { 0x00 }, { 0x11 }, { 0x15 }, { 0x15 }, { 0x15 }, { 0x0A }, { 0x00 } };
	charset['x'] = { { 0x00 }, { 0x00 }, { 0x11 }, { 0x0A }, { 0x04 }, { 0x0A }, { 0x11 }, { 0x00 } };
	charset['y'] = { { 0x00 }, { 0x00 }, { 0x11 }, { 0x11 }, { 0x0F }, { 0x01 }, { 0x0E }, { 0x00 } };
	charset['z'] = { { 0x00 }, { 0x00 }, { 0x1F }, { 0x02 }, { 0x04 }, { 0x08 }, { 0x1F }, { 0x00 } };
	charset['{'] = { { 0x02 }, { 0x04 }, { 0x04 }, { 0x08 }, { 0x04 }, { 0x04 }, { 0x02 }, { 0x00 } };
	charset['|'] = { { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x04 }, { 0x00 } };
	charset['}'] = { { 0x08 }, { 0x04 }, { 0x04 }, { 0x02 }, { 0x04 }, { 0x04 }, { 0x08 }, { 0x00 } };
	//charset['→'] = { { 0x00 }, { 0x04 }, { 0x02 }, { 0x1F }, { 0x02 }, { 0x04 }, { 0x00 }, { 0x00 } }; //not quite working
	//charset['←'] = { { 0x00 }, { 0x04 }, { 0x08 }, { 0x1F }, { 0x08 }, { 0x04 }, { 0x00 }, { 0x00 } };

	searchAndSet();
}

void Character::searchAndSet()
{
	if (charset.find(_lcd_char) == charset.end())
	{
		_character = { {0},{0},{0},{0},{0},{0},{0},{0} };
	}
	else 
	{
		_character = charset[_lcd_char];
	}
}

void Character::setChar(const char &lcd_char)
{
	_lcd_char = lcd_char;
	searchAndSet();
}

void Character::setPixSize(const float sizePixX, const float sizePixY)
{
	_sizePixX = sizePixX;

	if (sizePixY == -1)
		_sizePixY = sizePixX;
	else
		_sizePixY = sizePixY;
}

sf::Vector2f Character::getPixSize()
{
	sf::Vector2f size(_sizePixX, _sizePixY);
	return size;
}

void Character::draw(sf::RenderTarget& target, sf::RenderStates states) const
{
	sf::RectangleShape pix;
	sf::Vector2f currentPosition = getPosition();
	int scanGrid = 1;
	sf::Vector2f size(_sizePixX - scanGrid, _sizePixY - scanGrid);

	pix.setSize(size);

	for (unsigned int i = 0; i < _height; i++)
	{
		for (unsigned int j = 0; j < _width; j++)
		{
			if ((_character.at(i).pixels >> j) & 1)
			{
				pix.setFillColor(_colorLetter);
			}
			else
			{
				pix.setFillColor(_colorBackground);
			}
			
			pix.setPosition(abs((int)j - (int)_width + 1) * (float)_sizePixX + currentPosition.x, 
				i * (float)_sizePixY + currentPosition.y - scanGrid); //flip the pixel order
			target.draw(pix);
		}
	}

}
